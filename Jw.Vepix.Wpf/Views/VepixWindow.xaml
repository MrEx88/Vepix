<controls:MetroWindow x:Class="Jw.Vepix.Wpf.VepixWindow"
                      x:Name="_this"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:conv="clr-namespace:Jw.Vepix.Wpf.Converters"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:io="clr-namespace:System.IO;assembly=mscorlib"
                      xmlns:view="clr-namespace:Jw.Vepix.Wpf.Views"
                      xmlns:vm="clr-namespace:Jw.Vepix.Wpf.ViewModels"
                      Title="vepix" Height="630" Width="1120"
                      TitleCaps="False"
                      Icon="../Resources/vepixIcon.png"
                      DataContext="{Binding Source={StaticResource viewModelLocator}, Path=VepixWindowViewModel}">
    <controls:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Icons.xaml" />
                <ResourceDictionary>
                    <conv:BoolToVisibilityConverter x:Key="boolToVisConverter" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>        
    </controls:MetroWindow.Resources>
    
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Command="{Binding AboutCommand}"
                    FontSize="17"
                    FontFamily="Webdings">i</Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>

    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            
            <!-- Pictures Viewer: Functionality - Crop (todo: add Scale, ...) -->
            <controls:Flyout x:Name="picturesViewer"
                             HorizontalContentAlignment="Stretch"
                             Position="Right"
                             AreAnimationsEnabled="True"
                             Header="Crop"
                             IsOpen="False">
                <view:PicturesViewerView />
            </controls:Flyout>
            
            <!-- Edit Picture Names View -->
            <controls:Flyout x:Name="editNames"
                             Width="600"
                             Position="Right"
                             AreAnimationsEnabled="True"
                             Header="Edit Picture Names"
                             IsOpen="False">
                <view:EditNamesView />
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    
    <Grid Margin="5 5 5 5">
        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        
        <!-- Open Picture Buttons Bar -->
        <!-- todo: maybe switch to grid instead of stackpanel so i can adjust size -->
        <StackPanel Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Orientation="Horizontal">
            <Button x:Name="btnOpenContainingDirectory"
                    Command="{Binding OpenFolderCommand}" 
                    CommandParameter="{x:Static io:SearchOption.AllDirectories}"
                    ToolTip="Open Folder Tree"
                    Margin="0 0 5 0">
                <Rectangle Width="20"
                           Height="20"
                           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                                     Visual="{DynamicResource appbar_folder_open}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button x:Name="btnOpenDirectory"
                    Command="{Binding OpenFolderCommand}" 
                    CommandParameter="{x:Static io:SearchOption.TopDirectoryOnly}"
                    ToolTip="Open Folder"
                    Margin="0 0 5 0">
                <Rectangle Width="20"
                           Height="20"
                           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                                     Visual="{DynamicResource appbar_folder}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button x:Name="btnOpenFiles"
                    Command="{Binding OpenFilesCommand}"
                    ToolTip="Open File(s)">
                <Rectangle Width="20"
                           Height="20"
                           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill"
                                     Visual="{DynamicResource appbar_image_multiple}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </StackPanel>
        
        <!-- Navigation Tree View -->
        <view:PictureFolderTreeView DataContext="{Binding PictureFolderTreeViewModel}" 
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Margin="0 10 0 0"/>

        <!-- Picture Grid View Tabs -->
        <TabControl ItemsSource="{Binding PictureGridViewModels}"
                    SelectedItem="{Binding SelectedPictureGridViewModel, Mode=TwoWay}"
                    Grid.Row="1"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Margin=" 0 10 0 0">
            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TabControl.ItemContainerStyle>
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding FolderName}"
                                   Margin="5 0 20 0" />
                        <controls:ProgressRing Width="20"
                                               Height="20"
                                               Margin="0 0 10 0"
                                               Visibility="{Binding ArePicturesLoading, Converter={StaticResource boolToVisConverter}}" />
                        <Button Content="X"
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=DataContext.CloseFolderTabCommand}"
                                CommandParameter="{Binding}"
                                Width="20"
                                Height="20"
                                FontWeight="Bold"
                                FontSize="12"
                                Padding="0" />
                    </StackPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <view:PictureGridView />
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
        
    </Grid>
</controls:MetroWindow>
